%%!PS-Adobe-3.0 EPSF-3.0
%%Title: (dis.eps)
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Mar 21 17:01:39 2005
%%BoundingBox: 72 72 305 212
%%EndComments
/Gpdict 100 dict def
Gpdict begin
/Color false def
/Dashed false def
/Gplinewidth 20.000 def
/hpt_ 100.000 def
/vpt_ 100.000 def
 /hpt hpt_ def  
 /vpt vpt_ def  
 /Gppointsize_ 1 def 
 /Gplinewidth_ 1 def 
  
 /ArrowDict 25 dict def  
  
 /M /moveto load def  
 /L /lineto load def  
 /R /rmoveto load def  
 /V /rlineto load def  
 /N {newpath moveto} bind def  
 /f {rlineto fill} bind def  
 /ED { exch def} bind def  
  
 /Atan {/atan load stopped {pop pop 0} if } def  
 /Div {dup 0 eq { pop } { div } ifelse } def  
 /Pyth {dup mul exch dup mul add sqrt} def  
  
 %Sizes  
 /Gpsetlinewidth  
 { 
   dup 
 %  /Gplinewidth_ ED %save 
   Gplinewidth mul setlinewidth 
 } def  
  
 /Gpsetpointsize   
 {  
   dup  
   /Gppointsize_ ED %save 
   dup  
   vpt_ mul /vpt ED 
   hpt_ mul /hpt ED  
 } def  
      
 %Color  
 /SetHsbColor { Color {sethsbcolor} {pop pop pop} ifelse } def  
 /SetCmykColor { Color {setcmykcolor} {pop pop pop pop} ifelse } def  
 /SimpleSetColor {6 div 1 1 SetHsbColor} def  
 /Black {0 0 0 0 SetCmykColor} def  
 /Red {0 SimpleSetColor} def  
 /Blue {1 1 0 0 SetCmykColor} def  
 /Cyan {1 0 0 0 SetCmykColor} def  
 /Magenta {0 1 0 0 SetCmykColor} def 
  
 %Stroking  
 /PathLength@ % z = z + sqrt{(x-xlast)^2 + (y-ylast)^2}  
  {  
    /z   
    z  
    y ylast sub  
    x xlast sub  
    Pyth  
    add  
    def   
    /ylast y def  
    /xlast x def  
  } def  
      
  /PathLength  
  {  
    flattenpath  
    /z 0 def  
    { %move  
      /ystart ED  
      /xstart ED  
      /xlast xstart def  
      /ylast ystart def  
    }  
    { %line  
      /y ED  
      /x ED  
      PathLength@  
    }  
    { %curve  
    }  
    { %close  
      /x xstart def  
      /y ystart def  
      PathLength@   
    }  
    /pathforall load  
    stopped {pop pop pop pop} if  
    z  
  } def  
    
 %dotsep DotLine  
 /DotLine   
 {  
   PathLength /b ED   
   /z ED   
   /y currentlinewidth def   
   /z y z add def   
   [ 0 b b z Div round Div dup 0 le { pop 1 } if] 0 setdash   
   1 setlinecap  
 } def  
  
 /DashLine   
  {  
    PathLength /b ED   
    /x ED   
    /y ED   
    /z y x add def   
    b y sub z Div round z mul y add b exch Div 
    dup  
    y mul /y ED   
    x mul /x ED   
    x 0 gt y 0 gt and   
    { [ y x ] 0 }  
    { [ 1 0 ] 0 }  
    ifelse  
    setdash  
  } def  
  
 /DashLineTwo 
  {  
    PathLength /b ED   
    /u ED 
    /v ED 
    /x ED   
    /y ED 
    /z y x add u add v add def   
    b y sub z Div round z mul y add b exch Div 
    dup  
    y mul /y ED   
    x mul /x ED   
    x 0 gt y 0 gt and   
    { [ y x v u] 0 }  
    { [ 1 0 ] 0 }  
    ifelse  
    setdash  
  } def  
      
  
 /DotLineStroke   
 {  
   gsave  
     Dashed {currentlinewidth 2 mul DotLine} if  
     stroke  
   grestore  
 } def  
    
 /SolidLineStroke  
 {  
   gsave  
     [] 0 setdash  
     stroke  
   grestore  
 } def  
    
 /DashLineStroke  
 {  
   gsave   
     Dashed {Gplinewidth 8 mul Gplinewidth 5 mul DashLine} if  
     stroke  
   grestore  
 } def  
   
 /DashDotLineStroke  
 {  
   gsave   
     Dashed {Gplinewidth 8 mul Gplinewidth 5 mul 0 Gplinewidth 5 mul DashLineTwo} if  
     stroke  
   grestore  
 } def  
    
 /DashShortLineStroke  
 {  
   gsave   
     Dashed {Gplinewidth 4 mul dup DashLine} if  
     stroke  
   grestore  
 } def  
    
 /ArrowHead  
 {   
   currentlinewidth mul add dup 2 div /w ED  
   mul dup /h ED  
   mul /a ED   
   w neg h moveto   
   0 0 L   
   w h L   
   w neg a neg rlineto   
   gsave fill grestore   
 } def  
    
  %/DrawArrowHead {1 dup scale 0.2 1.4 50 3 ArrowHead} def  
  %%%%%  
  %inset length dim num  
  %arrowwidth = dim + num*linewidth  
  %arrowlength = length*arrowwidth  
  %arrowinset = width * inset  
    
  /DrawArrowHead {0.2 1.4 Gplinewidth 3 mul 4 ArrowHead} def  
    
  /Arrow  
  {  
    currentpoint  
    4 2 roll  
    ArrowDict  
    begin  
      /@mtrx matrix currentmatrix def  
      gsave  
        2 copy translate  
        2 index sub neg exch  
        3 index sub exch Atan  
        rotate  
        newpath  
        DrawArrowHead  
        @mtrx setmatrix  
        currentpoint  
      grestore  
    end %ArrowDicht  
    lineto  
    Gpstroke  
  } def  
    
  %axis  
  /LTa   
  {  
    Gpstroke      
    newpath  
    0 setgray  
    /Gpstroke {DotLineStroke newpath} def  
  } def  
    
  %border  
  /LTb  
  {  
    Gpstroke      
    newpath  
    0 setgray  
    /Gpstroke {SolidLineStroke newpath} def  
  } def  
    
  /LT0  
  {  
    Gpstroke      
    newpath  
    Red  
    /Gpstroke {SolidLineStroke newpath} def  
  } def  
    
  /LT1  
  {  
    Gpstroke      
    newpath  
    Blue  
    /Gpstroke {DashLineStroke newpath} def  
  } def  
    
  /LT2   
  {  
    Gpstroke  
    newpath  
    Cyan  
    /Gpstroke {DashShortLineStroke newpath} def  
  } def  
  
  /LT3   
  {  
    Gpstroke  
    newpath  
    Magenta  
    /Gpstroke {DashDotLineStroke newpath} def  
  } def  
    
  /Pnt  
  {  
    gsave   
      [] 0 setdash  
      1 setlinecap   
      Gplinewidth Gppointsize_ mul setlinewidth 
      M  
      0 0 V  
      stroke  
    grestore  
  } def  
    
  /DiaPath  
  {  
      [] 0 setdash  
      Gplinewidth setlinewidth  
      2 copy   
      newpath  
      vpt add moveto  
      hpt neg vpt neg rlineto   
      hpt vpt neg rlineto  
      hpt vpt rlineto   
      hpt neg vpt rlineto  
      closepath  
  } def  
    
  /Dia   
  {   
    gsave  
      DiaPath  
      stroke  
    grestore  
  } def  
    
  /DaF  
  {  
    gsave  
      DiaPath  
      fill  
    grestore  
  } def  
    
  /Crc  
  {  
    gsave  
      [] 0 setdash  
      Gplinewidth setlinewidth  
      newpath  
      vpt 0.85 mul 0 360 arc  
      closepath  
      stroke  
    grestore  
  } def  
        
    
  /Crs  
  {  
    gsave  
      [] 0 setdash  
      Gplinewidth setlinewidth  
      0 setlinecap  
      newpath  
      vpt sub  
      moveto  
      0 vpt 2 mul rlineto  
      hpt vpt neg rmoveto  
      hpt 2 mul neg 0 rlineto  
      stroke  
    grestore  
  } def  
    
  /CrX  
  {  
  gsave  
   translate  
   45 rotate  
   0 0 Crs  
  grestore  
  } def  
    
  /CcF  
  {  
    gsave  
      [] 0 setdash  
      Gplinewidth setlinewidth  
      newpath  
      vpt 0.85 mul 0 360 arc  
      closepath  
      fill  
    grestore  
  } def  
    
  /Box  
  {  
     gsave  
       translate  
       45 rotate  
       0 0 DiaPath  
       stroke  
     grestore  
  } def  
    
  /BxF  
  {  
     gsave  
       translate  
       45 rotate  
       0 0 DiaPath  
       fill  
     grestore  
  } def  
    
  /Gpstroke {stroke} def  
  1 setlinecap  
  1 setlinejoin 
 %
 % PostScript level 2 pattern fill definitions
 % Ethan A Merritt April 2003
 %
 % Level-1 compatible emulation for rectfill
  /RF { gsave newpath 4 -2 roll moveto dup 0 exch rlineto
    exch 0 rlineto neg 0 exch rlineto closepath fill grestore
  } bind def
  /BoxFill { gsave RF fill grestore } def 
  /Blank { 0 0 M 0 8 L 8 8 L 8 0 L 0 0 L
           1.0 setgray fill 0.0 setgray 0.5 setlinewidth } bind def
  /Tile8x8 { /PaintType 1 def /PatternType 1 def /TilingType 1 def
             /BBox [0 0 8 8] def /XStep 8 def /YStep 8 def
  } bind def
  /P1D 12 dict def P1D begin
      Tile8x8 /PaintProc { Blank 0 0 M 8 8 L 0 8 M 8 0 L stroke } def
  end P1D matrix makepattern
  /Pattern1 exch def
  /P2D 12 dict def P2D begin
      Tile8x8 /PaintProc { Blank 0 0 M 8 8 L 0 8 M 8 0 L stroke
                           0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke } def
  end P2D matrix makepattern
  /Pattern2 exch def
  /P3D 12 dict def P3D begin
      Tile8x8 /PaintProc { Blank 0 0 M 0 8 L
                          8 8 L 8 0 L 0 0 L fill } def
  end P3D matrix makepattern
  /Pattern3 exch def
  /P4D 12 dict def P4D begin
      Tile8x8 /PaintProc { Blank -4 8 M 8 -4 L
                          0 12 M 12 0 L stroke } def
  end P4D matrix makepattern
  /Pattern4 exch def
  /P5D 12 dict def P5D begin
      Tile8x8 /PaintProc { Blank -4 0 M 8 12 L
                          0 -4 M 12 8 L stroke } def
  end P5D matrix makepattern
  /Pattern5 exch def
  /P6D 12 dict def P6D begin
      Tile8x8 /PaintProc { Blank -2 8 M 4 -4 L
                          0 12 M 8 -4 L 4 12 M 10 0 L stroke } def
  end P6D matrix makepattern
  /Pattern6 exch def
  /P7D 12 dict def P7D begin
      Tile8x8 /PaintProc { Blank -2 0 M 4 12 L
                          0 -4 M 8 12 L 4 -4 M 10 8 L stroke } def
  end P7D matrix makepattern
  /Pattern7 exch def
  /P8D 12 dict def P8D begin
      Tile8x8 /PaintProc { Blank 8 -2 M -4 4 L
                          12 0 M -4 8 L 12 4 M 0 10 L stroke } def
  end P8D matrix makepattern
  /Pattern8 exch def
  /P9D 12 dict def P9D begin
      Tile8x8 /PaintProc { Blank 0 -2 M 12 4 L
                          -4 0 M 12 8 L -4 4 M 8 10 L stroke } def
  end P9D matrix makepattern
  /Pattern9 exch def
 
end
%%%%EndProlog
Gpdict begin
gsave
72 72 translate
0.0200 0.0200 scale
0 setgray
newpath
1.000 Gpsetpointsize
1.000 Gpsetlinewidth
1.000 Gpsetlinewidth
LTb
2000 1200 M
300 0 V
Gpstroke
11100 1200 M
-300 0 V
Gpstroke
1.000 Gpsetlinewidth
LTb
2000 2103 M
300 0 V
Gpstroke
11100 2103 M
-300 0 V
Gpstroke
1.000 Gpsetlinewidth
LTb
2000 3007 M
300 0 V
Gpstroke
11100 3007 M
-300 0 V
Gpstroke
1.000 Gpsetlinewidth
LTb
2000 3910 M
300 0 V
Gpstroke
11100 3910 M
-300 0 V
Gpstroke
1.000 Gpsetlinewidth
LTb
2000 4813 M
300 0 V
Gpstroke
11100 4813 M
-300 0 V
Gpstroke
1.000 Gpsetlinewidth
LTb
2000 5717 M
300 0 V
Gpstroke
11100 5717 M
-300 0 V
Gpstroke
1.000 Gpsetlinewidth
LTb
2000 6620 M
300 0 V
Gpstroke
11100 6620 M
-300 0 V
Gpstroke
1.000 Gpsetlinewidth
LTb
2000 1200 M
0 300 V
Gpstroke
2000 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
2910 1200 M
0 300 V
Gpstroke
2910 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
3820 1200 M
0 300 V
Gpstroke
3820 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
4730 1200 M
0 300 V
Gpstroke
4730 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
5640 1200 M
0 300 V
Gpstroke
5640 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
6550 1200 M
0 300 V
Gpstroke
6550 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
7460 1200 M
0 300 V
Gpstroke
7460 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
8370 1200 M
0 300 V
Gpstroke
8370 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
9280 1200 M
0 300 V
Gpstroke
9280 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
10190 1200 M
0 300 V
Gpstroke
10190 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
11100 1200 M
0 300 V
Gpstroke
11100 6620 M
0 -300 V
Gpstroke
1.000 Gpsetlinewidth
LTb
1.000 Gpsetlinewidth
LTb
2000 1200 M
9100 0 V
0 5420 V
-9100 0 V
0 -5420 V
Gpstroke
LTb
LTb
1.000 Gpsetpointsize
2.000 Gpsetpointsize
2.000 Gpsetlinewidth
LT2
LTb
LT2
9735 3910 M
1100 0 V
Gpstroke
2228 1806 M
227 737 V
683 114 V
1137 373 V
6550 4172 L
4550 2122 V
Gpstroke
2228 1806 Dia
2455 2543 Dia
3138 2657 Dia
4275 3030 Dia
6550 4172 Dia
11100 6294 Dia
10285 3910 Dia
2.000 Gpsetpointsize
2.000 Gpsetlinewidth
LT2
LTb
LT2
9735 3510 M
1100 0 V
Gpstroke
2228 3452 M
227 2892 V
683 -839 V
4275 5317 L
2275 205 V
4550 -7 V
Gpstroke
2228 3452 Crs
2455 6344 Crs
3138 5505 Crs
4275 5317 Crs
6550 5522 Crs
11100 5515 Crs
10285 3510 Crs
2.000 Gpsetpointsize
2.000 Gpsetlinewidth
LT1
LTb
LT1
9735 3110 M
1100 0 V
Gpstroke
2228 1505 M
227 -62 V
683 121 V
1137 121 V
2275 82 V
4550 417 V
Gpstroke
2228 1505 Crc
2455 1443 Crc
3138 1564 Crc
4275 1685 Crc
6550 1767 Crc
11100 2184 Crc
10285 3110 Crc
2.000 Gpsetpointsize
2.000 Gpsetlinewidth
LT1
LTb
LT1
9735 2710 M
1100 0 V
Gpstroke
2228 2391 M
227 -354 V
683 304 V
1137 62 V
6550 2164 L
4550 127 V
Gpstroke
2228 2391 CrX
2455 2037 CrX
3138 2341 CrX
4275 2403 CrX
6550 2164 CrX
11100 2291 CrX
10285 2710 CrX
1.000 Gpsetlinewidth
LTb
2000 1200 M
9100 0 V
0 5420 V
-9100 0 V
0 -5420 V
1.000 Gpsetpointsize
Gpstroke
grestore
end
showpage
%%%%EOF
